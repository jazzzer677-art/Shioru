-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local Workspace = workspace
local CoreGui = game:GetService("CoreGui")

-- Settings
local Settings = {
    AimPart = "HumanoidRootPart",    -- ส่วนที่จะเอามาเป็นจุดคำนวณ
    AutoShoot = true,                -- ยิงอัตโนมัติ
    Prediction = 0.12,               -- การพยากรณ์ตำแหน่ง
    JumpOffset = 0.07,               -- ปรับตำแหน่งตอนกระโดด
}

-- Highlight ESP Settings (จะใช้ highlight เดียว)
local FillColor = Color3.fromRGB(175,25,255)
local DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
local FillTransparency = 0.5
local OutlineColor = Color3.fromRGB(255,255,255)
local OutlineTransparency = 0

-- สร้าง Highlight เดียวสำหรับเป้าปัจจุบัน
local targetHigh = Instance.new("Highlight")
targetHigh.Name = "SilentAim_TargetHighlight"
targetHigh.FillColor = FillColor
targetHigh.DepthMode = DepthMode
targetHigh.FillTransparency = FillTransparency
targetHigh.OutlineColor = OutlineColor
targetHigh.OutlineTransparency = OutlineTransparency
targetHigh.Parent = CoreGui  -- หรือเก็บที่อื่นก็ได้

-- ฟังก์ชันหาเป้าหมายใกล้สุด (คืนเป็น TargetPart)
local function getNearestTarget()
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild(Settings.AimPart) then return nil end
    local myPos = LocalPlayer.Character[Settings.AimPart].Position
    local nearestDist = math.huge
    local nearestTargetPart = nil
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(Settings.AimPart) then
            local tp = player.Character[Settings.AimPart]
            local dist = (tp.Position - myPos).Magnitude
            if dist < nearestDist then
                nearestDist = dist
                nearestTargetPart = tp
            end
        end
    end
    return nearestTargetPart
end

-- คำนวณตำแหน่งยิง (Prediction + JumpOffset)
local function getSilentAimPosition(targetPart)
    local pos = targetPart.Position
    local vel = targetPart.Velocity or Vector3.new()
    local predictedPos = pos + vel * Settings.Prediction
    local humanoid = targetPart.Parent and targetPart.Parent:FindFirstChildOfClass("Humanoid")
    if humanoid and humanoid:GetState() == Enum.HumanoidStateType.Jumping then
        predictedPos = predictedPos + Vector3.new(0, Settings.JumpOffset, 0)
    end
    return predictedPos
end

-- ยิงอัตโนมัติ (เรียก Remote)
local function fireWeapon(targetPart)
    if not targetPart then return end
    local aimPos = getSilentAimPosition(targetPart)
    if aimPos then
        local remote = ReplicatedStorage:FindFirstChild("MAINEVENT")
        if remote and remote.FireServer then
            -- ตัวอย่างตามรูปแบบที่คุณให้ไว้ก่อนหน้า
            remote:FireServer("MOUSE", aimPos)
        end
    end
end

-- ตัวแปรเก็บเป้าปัจจุบัน เพื่อเปรียบเทียบการเปลี่ยนแปลง (ลดการตั้ง Adornee ซ้ำ)
local currentTargetCharacter = nil

-- Loop หลัก: หาเป้า ยิง และอัพเดต Highlight ให้แสดงเฉพาะเป้าที่ถูก aim
RunService.RenderStepped:Connect(function()
    local targetPart = getNearestTarget() -- targetPart คือ BasePart (เช่น HumanoidRootPart)
    
    -- ถ้ามี target ให้ยิง (ถ้าเปิด AutoShoot)
    if targetPart and Settings.AutoShoot then
        fireWeapon(targetPart)
    end

    -- อัพเดต Highlight: ให้ Adornee เป็นตัวละครของ targetPart เท่านั้น
    if targetPart and targetPart.Parent then
        local char = targetPart.Parent
        if currentTargetCharacter ~= char then
            -- เปลี่ยนเป้า: ตั้ง Adornee ใหม่
            targetHigh.Adornee = char
            currentTargetCharacter = char
        end
    else
        -- ถ้าไม่มีเป้า: ซ่อน highlight โดยตั้ง Adornee = nil (หรือ parent = nil)
        if currentTargetCharacter ~= nil then
            targetHigh.Adornee = nil
            currentTargetCharacter = nil
        end
    end
end)
